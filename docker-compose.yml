services:
  api:
    container_name: api
    build:
      context: ./api
      target: ${NODE_ENV} # envファイルで指定したイメージでコンテナを起動。ただし、変更を反映させるには、--buildをつけてビルドから始めること。
    depends_on:
      - db # dbサービスの起動後、apiサービスを起動
    ports:
      - ${PORT}:${PORT}
    environment:
      - PORT=${PORT}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./api:/app # apiソースコード全体をコンテナの/appにマウント
      - api_node_modules:/app/node_modules
    networks:
      - internal_net # dbサービスとの接続に利用するネットワーク
      - external_net # 外部との接続に利用するネットワーク
  
  db:
    container_name: db
    image: mysql:8.4.0
    restart: always # 停止すると自動的に再起動する
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    environment:
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql # mysql_dataボリュームを、mysqlの保存先ディレクトリにマウント
    networks:
      - internal_net

volumes:
  mysql_data:
  api_node_modules:

networks:
  internal_net:
    internal: true # 内部ネットワークとして定義
  external_net: